{
  "info": {
    "name": "Flask ToDoList API",
    "_postman_id": "flask-todolist-collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://127.0.0.1:5000"
    }
  ],
  "item": [
    {
      "name": "GET /tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"状态码为200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "const json = pm.response.json();",
              "pm.test(\"返回 success\", () => pm.expect(json.status).to.eql('success'));",
              "pm.test(\"data为数组\", () => pm.expect(json.data).to.be.an('array'));"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /tasks - 创建任务",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"写实验报告\",\n  \"category\": \"学习\",\n  \"flag\": true,\n  \"star\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"创建返回200\", () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.test(\"返回success\", () => pm.expect(json.status).to.eql('success'));",
              "pm.test(\"返回的数据包含 id 和 created_at\", () => {",
              "    pm.expect(json.data).to.have.property('id');",
              "    pm.expect(json.data).to.have.property('created_at');",
              "    pm.expect(json.data.title).to.eql('写实验报告');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /tasks/:id - 切换完成状态",
      "request": {
        "method": "PUT",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/1",
          "host": ["{{baseUrl}}"],
          "path": ["tasks","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"PUT 返回200\", () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.test(\"返回 success 且包含 completed\", () => {",
              "    pm.expect(json.status).to.eql('success');",
              "    pm.expect(json.data).to.have.property('completed');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PATCH /tasks/:id - 编辑任务",
      "request": {
        "method": "PATCH",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \"title\": \"写实验报告（更新）\", \"star\": false }"
        },
        "url": {
          "raw": "{{baseUrl}}/tasks/1",
          "host": ["{{baseUrl}}"],
          "path": ["tasks","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"PATCH 返回200\", () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.test(\"编辑生效\", () => {",
              "    pm.expect(json.status).to.eql('success');",
              "    pm.expect(json.data.title).to.eql('写实验报告（更新）');",
              "    pm.expect(json.data.star).to.eql(false);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /tasks/:id - 删除任务",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/tasks/1",
          "host": ["{{baseUrl}}"],
          "path": ["tasks","1"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"DELETE 返回200\", () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.test(\"返回success消息\", () => pm.expect(json.status).to.eql('success'));"
            ]
          }
        }
      ]
    }
  ]
}