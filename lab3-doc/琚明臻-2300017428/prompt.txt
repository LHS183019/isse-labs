Prompt:
我现在要使用vibe coding完成一个可运行的前后端系统，基于Python语言，具体是实现一个 ToDoList：添加、删除、标记完成、按优先级和分类展示。
技术要求：
后端使用 Flask ，运行在 localhost:5000，接口返回 JSON。
前端使用 HTML + JS + fetch 调用接口，实现完整交互。
为了环境的兼容性，可以先写部分框架再让AI补全。
我需要先写后端接口、测试通过后再接前端。也就是两步走，不一次生成。
下面请你帮我按照要求撰写提示词，分别是后端的提示词和前端的提示词。

后端提示词：
请你作为一名经验丰富的Python后端工程师，使用Flask框架为我创建一个ToDoList应用的后端服务。
功能要求：
任务添加 (POST /tasks): 接收任务详情 (标题、描述、优先级、分类)，保存到内存中（可以使用列表或字典模拟数据库），并返回新创建的任务信息，包含一个唯一的id。
任务列表 (GET /tasks): 返回所有任务的列表。支持以下查询参数：
priority (可选): 按优先级过滤任务。
category (可选): 按分类过滤任务。
返回的任务应按id排序。
任务更新 (PUT /tasks/int:task_id): 根据任务id更新任务的标题、描述、优先级、分类或完成状态。
任务删除 (DELETE /tasks/int:task_id): 根据任务id删除指定任务。
任务标记完成/未完成 (PATCH /tasks/int:task_id/complete): 切换任务的完成状态。
技术要求：
使用 Flask 框架。
服务运行在 localhost:5000。
所有接口返回 JSON 格式数据。
使用Python的内置数据结构（如列表和字典）来模拟数据存储，不需要数据库。
请包含必要的错误处理，例如当任务不存在时返回404。
请在代码中添加详细的注释，解释每个接口的功能和实现细节。
确保跨域（CORS）支持，以便前端可以顺利访问。
请提供完整的Python Flask后端代码。

前端提示词：
请你作为一名经验丰富的前端工程师，使用HTML、CSS和JavaScript为我创建一个ToDoList应用的前端页面。
功能要求：
任务展示: 在页面上清晰地展示所有任务，包括标题、描述、优先级、分类和完成状态。
添加任务: 提供一个表单，允许用户输入任务的标题、描述、优先级和分类，并能够通过点击按钮将新任务添加到列表中。
删除任务: 每个任务旁边应有一个删除按钮，点击后能从列表中移除该任务。
标记完成/未完成: 每个任务旁边应有一个复选框或按钮，点击后能切换任务的完成状态，并在UI上有所体现（例如，已完成任务的文字带有删除线）。
筛选任务: 提供筛选功能，允许用户根据优先级和分类来过滤显示的任务。
清空已完成任务: 提供一个按钮，点击后可以清空所有已完成的任务。
技术要求：
使用纯HTML、CSS和JavaScript实现，不依赖任何前端框架。
使用 fetch API 调用后端（localhost:5000）提供的RESTful接口进行数据交互。
页面布局和样式简洁、直观，用户体验良好。
JavaScript代码结构清晰，易于理解和维护。
请提供完整的HTML、CSS和JavaScript代码，可以直接在浏览器中运行。
请在JavaScript代码中添加详细注释，解释每个函数的功能和实现细节。